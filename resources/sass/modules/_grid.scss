/******************************************************************
Site Name: Order
Author: Sebastian Lenton

Stylesheet: Grid

General grid only. Specific layouts should not be in here.

******************************************************************/

/*********************
VARIABLES
*********************/

//tablet and desktop only atm (still thinking about how to handle things on mob)
$columns: 12;
$cell: 100% / $columns;

/* mobile */
$mobile_gutter: 6.25vw / 2;
$mobile_containerMargin: $mobile_gutter;

/* tablet */
$tablet_gutter: 3.125vw / 2;
$tablet_containerMargin: 7.8vw - $tablet_gutter;

/* desktop */
$desktop_gutter: 1.875vw / 2;
$desktop_containerMargin: 7.8vw - $desktop_gutter;



/*********************
CONTAINER
*********************/

.gc {
  width: 100%;

  @include mq( $until: tablet ) {
    padding: 0 $mobile_containerMargin;
  }

  @include mq( $from: tablet, $until: desktop ) {
    padding: 0 $tablet_containerMargin;
  }

  @include mq( $from: desktop ) {
    padding: 0 $desktop_containerMargin;
  }

}


/*********************
GRID
*********************/

/*
  Example grid markup: <div class="g g2-12 gp1"></div>, where:
  g: grid
  g2-12: grid column of 2 of 12 (or whichever column value)
  gp1: push by 1 column
*/

.g {
  @include mq( $until: tablet ) {
    padding:0 $mobile_gutter;
  }

  @include mq( $from: tablet, $until: desktop ) {
    padding:0 $tablet_gutter;
  }

  @include mq( $from: desktop ) {
    padding:0 $desktop_gutter;
  }

	float: left;
	min-height: 1px;
}

  @for $i from 1 through $columns {
    .g#{$i}-#{$columns} {
        width: $cell * $i;
    }
  }

  @for $i from 1 through $columns {
    .g#{$i}-#{$columns} {
        width: $cell * $i;
    }
  }


/*********************
GRID BREAKERS
*********************/

@include mq( $until: tablet ) {
  .gBreakTablet {
    width: 100%;
    float: none;
    margin-left: 0;   // override grid push, if push present
  }
}


/*********************
GRID PUSHERS
*********************/

@for $i from 1 through $columns - 1 {
	.gp#{$i} {
		margin-left: $cell * $i;
	}
}


/*********************
CLEARFIX
*********************/

.cf:after {
    content:" ";
    display:table;
    clear:both;
}